-- Retrieve the total number of orders placed.
SELECT COUNT(*) AS TOTAL_ORDERS
FROM ORDERS

-- Calculate the total revenue generated from pizza sales
SELECT 
ROUND(SUM(OD.QUANTITY*P.PRICE),2) AS TOTAL_PRICE
FROM order_details OD
JOIN PIZZAS P USING(PIZZA_ID)

-- Identify the highest-priced pizza
SELECT PT.NAME AS PIZZA_NAME, 
P.PRICE AS HIGHEST_PRICE
FROM PIZZAS P
JOIN PIZZA_TYPES PT 
USING(PIZZA_TYPE_ID)
WHERE P.PRICE IN (
	SELECT MAX(PRICE) 
    FROM PIZZAS
)

-- Identify the most common pizza size ordered
SELECT P.SIZE, COUNT(*) AS TOTAL_ORDERS
FROM ORDER_DETAILS OD
JOIN ORDERS O USING(ORDER_ID)
JOIN PIZZAS P USING(PIZZA_ID)
GROUP BY P.SIZE
ORDER BY TOTAL_ORDERS DESC
LIMIT 1

-- List the top 5 most ordered pizza types along with their quantities.
SELECT PT.NAME, COUNT(OD.QUANTITY) AS QUANTITY
FROM ORDER_DETAILS OD
JOIN PIZZAS P USING(PIZZA_ID)
JOIN PIZZA_TYPES PT USING(PIZZA_TYPE_ID)
GROUP BY PT.NAME
ORDER BY QUANTITY DESC
LIMIT 5

-- Join the necessary tables to find the total quantity of each pizza category ordered.
SELECT PT.CATEGORY, SUM(OD.QUANTITY) AS TOTAL_ORDERS
FROM ORDER_DETAILS OD
JOIN PIZZAS USING(PIZZA_ID)
RIGHT JOIN PIZZA_TYPES PT USING(PIZZA_TYPE_ID)
GROUP BY PT.CATEGORY

-- Determine the distribution of orders by hour of the day.
SELECT HOUR(ORDER_TIME) AS ORDER_HOUR, COUNT(*) AS TOTAL_ORDERS
FROM ORDERS
GROUP BY ORDER_HOUR
ORDER BY ORDER_HOUR

-- Join relevant tables to find the category-wise distribution of pizzas.
SELECT PT.CATEGORY, COUNT(PT.NAME) AS TOTAL_PIZZAS
FROM PIZZA_TYPES PT
GROUP BY PT.CATEGORY

-- Group the orders by date and calculate the average number of pizzas ordered per day.
WITH CTE AS (
	SELECT O.ORDER_DATE, SUM(OD.QUANTITY) AS TOTAL_ORDERS
	FROM ORDERS O 
    JOIN ORDER_DETAILS OD USING(ORDER_ID)
	GROUP BY O.ORDER_DATE
	ORDER BY O.ORDER_DATE
)

SELECT ROUND(AVG(TOTAL_ORDERS),2) AS AVERAGE_ORDERS_PER_DAY
FROM CTE

-- Determine the top 3 most ordered pizza types based on revenue.
SELECT PT.NAME,
ROUND(SUM(OD.QUANTITY*P.PRICE),2) AS ORDER_REVENUE
FROM ORDER_DETAILS OD
JOIN PIZZAS P USING(PIZZA_ID)
JOIN PIZZA_TYPES PT USING(PIZZA_TYPE_ID)
GROUP BY PT.NAME
ORDER BY ORDER_REVENUE DESC
LIMIT 3

-- Calculate the percentage contribution of each pizza type to total revenue.
WITH CTE AS (
	SELECT PT.CATEGORY, ROUND(SUM(OD.QUANTITY*P.PRICE),2) AS ORDER_REVENUE
    FROM ORDER_DETAILS OD
    JOIN PIZZAS P USING(PIZZA_ID)
    JOIN PIZZA_TYPES PT USING(PIZZA_TYPE_ID)
    GROUP BY PT.CATEGORY
)

SELECT *,
ROUND(100*ORDER_REVENUE/ROUND((SELECT SUM(ORDER_REVENUE) FROM CTE),2),3) AS TOTAL_REVENUE
FROM CTE
ORDER BY TOTAL_REVENUE DESC

-- Analyze the cumulative revenue generated over time.
WITH CTE AS (
	SELECT MONTH(O.ORDER_DATE) AS MONTH, ROUND(SUM(OD.QUANTITY*P.PRICE),2) AS TOTAL_REVENUE
	FROM ORDER_DETAILS OD 
    JOIN ORDERS O USING(ORDER_ID)
    JOIN PIZZAS P USING(PIZZA_ID)
	GROUP BY MONTH(ORDER_DATE)
)

SELECT *,
ROUND(SUM(TOTAL_REVENUE) OVER(ORDER BY MONTH),2) AS CUMMULATIVE_REVENUE
FROM CTE

-- Determine the top 3 most ordered pizza types based on revenue for each pizza category
WITH CTE AS (
	SELECT  PT.CATEGORY, PT.NAME, 
	ROUND(SUM(OD.QUANTITY*P.PRICE),2) AS TOTAL_REVENUE,
    RANK() 
	OVER(PARTITION BY CATEGORY 
		ORDER BY ROUND(SUM(OD.QUANTITY*P.PRICE),2) DESC)
	AS RNK
	FROM ORDER_DETAILS OD
	JOIN PIZZAS P USING(PIZZA_ID)
	JOIN PIZZA_TYPES PT USING(PIZZA_TYPE_ID)
	GROUP BY PT.CATEGORY, PT.NAME
)

SELECT CATEGORY, NAME, TOTAL_REVENUE FROM CTE
WHERE RNK<=3    
